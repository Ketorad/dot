#!/bin/bash


highestProcBlockPriority=3
highestProcBlockInterval=5
highestProcBlock() {
	if (( barTimer >= highestProcBlockTimer )); then
		highestProcBlockTimer=$(( barTimer + highestProcBlockInterval ))

		local minBrightness=100

		local mediumCpuUsage=50
		local highCpuUsage=100

		local mediumMemUsage=50
		local highMemUsage=80

		# get proccess with highest cpu usage
		local highestProc="$(ps -eo comm,%cpu,rss --sort=-%cpu --no-headers | head -n 1)"
		local tempIFS=$IFS
		IFS=' '
		read -ra "ADDR" <<< "$highestProc"
		local progName="${ADDR[@]::${#ADDR[@]}-2}" # all but last 2 elements of array
		local cpu="${ADDR[-2]}" # second last element of array
		local mem="${ADDR[-1]}" # last element of array
		IFS=$tempIFS

		# set random color on proccess name seeded on the name
		local progNameValue="0"
		for (( i=0; i < ${#progName}; i++ )); do
			local progNameValue=$(( $progNameValue + $(printf '%d' "'${progName:$i:1}") ))
		done
		local rgbValues=( $(bash -c "RANDOM=$progNameValue; echo \$RANDOM \$RANDOM \$RANDOM") )
		local progNameColor=""
		for (( i = 0; i < 3; i++ )); do
			local rgbValues[$i]=$(( ${rgbValues[$i]} % 255 ))
		done

		# add brightness if below minimum brightness
		local brightness=$(( (299 * ${rgbValues[0]} / 1000) + (587 * ${rgbValues[1]} / 1000) + (114 * ${rgbValues[2]}) / 1000 ))
		if (( $brightness < $minBrightness )); then
			local brightnessDiff=$(( $minBrightness - $brightness ))
			for (( i = 0; i < 3; i++ )); do
				local rgbValues[$i]=$(( ${rgbValues[$i]} + $brightnessDiff ))
			done
		fi

		# prevent rgb values from exceeding 255
		for (( i = 0; i < 3; i++ )); do
			if (( ${rgbValues[i]} > 255 )); then
				local rgbValues[i]=255
			fi
		done

		# convert colors to hex and store them in a single string
		for color in ${rgbValues[@]}; do
			local progNameColor+=$(printf '%x' $color)
		done

		# set cpu usage color
		if (( ${cpu%%.*} < $mediumCpuUsage )); then
			local cpuUsageColor="$colorGreen"
			local cpuUsageSignColor="$colorDarkGreen"
		elif (( ${cpu%%.*} < $highCpuUsage )); then
			local cpuUsageColor="$colorYellow"
			local cpuUsageSignColor="$colorDarkYellow"
		else
			local cpuUsageColor="$colorRed"
			local cpuUsageSignColor="$colorDarkRed"
		fi

		# set memory usage color
		local memTotal=$(awk '/^MemTotal:/{print$2}' /proc/meminfo)
		if (( $mem < $memTotal * $mediumMemUsage / 100 )); then
			local memColor="$colorGreen"
			local memSizeColor="$colorDarkGreen"
		elif (( $mem < $memTotal * $highMemUsage / 100 )); then
			local memColor="$colorYellow"
			local memSizeColor="$colorDarkYellow"
		else
			local memColor="$colorRed"
			local memSizeColor="$colorDarkRed"
		fi

		# convert memory usage KB to MB, GB or TB as needed
		local mb=1024
		local gb=$(( $mb * $mb ))
		local tb=$(( $gb * $mb ))
		if (( $mem < $mb )); then
			local memSize="KB"
		elif (( $mem < $gb )); then
			local mem="$mem $mb"
			local memSize="MB"
		elif (( $mem < $tb )); then
			local mem="$mem $gb"
			local memSize="GB"
		else
			local mem="$mem $tb"
			local memSize="TB"
		fi
			local mem=$(echo "$mem" | awk '{converted=$1/$2; print converted}' | awk -F. '{print $1"."substr($2,1,1)}')

		# print out
		clearText highestProcBlock

		alignText progName "15" "center"
		addText highestProcBlock "$progName" "#$progNameColor"
		addText highestProcBlock " cpu " "$colorWhite"
		addText highestProcBlock "$cpu" "$cpuUsageColor"
		addText highestProcBlock "%" "$cpuUsageSignColor"
		addText highestProcBlock " mem " "$colorWhite"
		addText highestProcBlock "$mem" "$memColor"
		addText highestProcBlock "$memSize" "$memSizeColor"
	fi
}
